<launch>

    <arg name="top_k"
        default="50"
        doc="How many grasps to retrieve." />

    <node pkg="topic_tools" type="relay" name="point_cloud_relayer"
        args="points2 point_cloud"
    />

    <!-- Ensure trisect camera is started, per notes.md -->
    <node pkg="topic_tools" type="relay" name="relay" args="/point_cloud /camera/depth/points"/>

    <include file="$(find ros_tcp_endpoint)/launch/endpoint.launch">
        <arg name="tcp_ip" value="192.168.1.4" />
        <arg name="tcp_port" value="11312" />
    </include>

    <rosparam ns="bravo" file="$(find kin_feas_filter)/config/kin_feas_filter.yaml" command="load" />
    <node ns="bravo" pkg="kin_feas_filter" type="kin_feas_filter" name="kin_feas_filter" 
        respawn="true" output="screen" launch-prefix="xterm -hold -e taskset -c 1">
        <remap from="planning_scene_world" to="move_group/planning_scene_world"/>
        <remap from="planning_scene" to="move_group/monitored_planning_scene"/>
        <remap from="collision_object" to="move_group/collision_object"/>
        <remap from="attached_collision_object" to="move_group/attached_collision_object"/>
    </node>

    <!-- Start find_grasps_server -->
    <include file="$(find grasp_synth)/launch/grasp_server.launch"/>

    <!-- Start rviz for visualization, using our config. -->
    <node  pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find grasp_synth)/config/visualize_grasps.rviz"/>

    <!-- Start node to transform grasp poses into 3D markers for rviz -->
    <node pkg="grasp_synth" type="grasp_pose_to_marker_array.py" name="grasp_pose_to_marker_array" launch-prefix="xterm -hold -e">         
        <remap from="grasps" to="/filtered_grasps"/>
        <remap from="grasp_pose_markers" to="grasp_synth/filtered_grasp_pose_markers"/>
    </node>
    <!-- show invalid grasps in red -->
    <!-- "(255.0, 0.0, 0.0, 0.05) -->
    <node pkg="grasp_synth" type="grasps2_to_marker_array.py" name="unfiltered_pose_array" launch-prefix="xterm -hold -e" args='--color "(255.0, 0.0, 0.0, 0.2)"' >
        <remap from="grasps" to="/unfiltered_grasps"/>
        <remap from="grasp_pose_markers" to="grasp_synth/unfiltered_grasp_pose_markers"/>
    </node>
    
    <!-- Start node to read point clouds, request grasps, and publish the grasps to the 
    `grasp_synth/grasps` topic. -->
    <node pkg="grasp_synth" type="find_grasp_client.py" name="find_grasp_client" 
        args="$(arg top_k)"/>
    
        
    
</launch>